allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

ext {
    //Android
    minSdkVersion = 21
    targetSdkVersion = 30
    compileSdkVersion = 30
    buildToolsVersion = '30.0.3'

    sourceCompatibilityVersion = JavaVersion.VERSION_1_8
    targetCompatibilityVersion = JavaVersion.VERSION_1_8

    //Libraries
    appcompatVersion = '1.0.2'
    constarintLayoutVersion = '2.0.4'
    multiDexVersion = '2.0.0'
    materialVersion = '1.3.0-rc01'
    supportFragmentVersion = '1.0.0'
    supportV4Version = "1.0.0"
    cardViewVersion = "1.0.0"
    firebaseVersion = '16.0.5'
    firebaseStorageVersion = '19.1.1'
    gsonVersion = '2.8.2'
    retrofitVersion = '2.5.0'
    picassoVersion = '2.5.2'
    butterKnifeVersion = '10.2.3'
    daggerVersion = '2.16'
    kotlinVersion = '1.1.4-3'
    rxJavaVersion = '2.2.6'
    rxAndroidVersion = '2.1.1'
    rxKotlinVersion = '2.1.0'
    timberVersion = '4.6.0'
    leakVersion = '1.4'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    androidAnnotationsVersion = '1.0.0'
    roomVersion = '1.0.0-alpha9-1'
    glideVersion = '4.10.0'
    okHttpVersion = '3.10.0'
    supportLibraryVersion = '26.1.0'
    threeTenAbpVersion = '1.1.2'
    stethoVersion = '1.5.0'
    parcelerVersion = '1.1.12'
    circleImageViewVersion = '3.0.0'
    zingVersion = '3.2.1'
    firebaseCoreVersion = '17.0.0'
    firebaseMessagingVersion = '20.2.3'
    firebaseCrashlyticsVersion = "17.1.1"
    segmentedButtonVersion = 'v2.0.2'


    //Testing
    robolectricVersion = '3.4.2'
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoVersion = '1.9.5'
    dexmakerVersion = '1.0'
    espressoVersion = '3.1.0-alpha4'
    testingSupportLibVersion = '0.1'
    mockitoKotlinVersion = '1.5.0'
    mockitoAndroidVersion = '2.8.47'
    androidSupportRunnerVersion = '1.0.0'
    androidSupportRulesVersion = '1.0.0'
    dexmakerMockitoversion = '2.2.0'
    runnerVersion = '1.1.0-alpha4'

    //dependencies
    //impl
    //kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"

    appcompat = "androidx.appcompat:appcompat:{$appcompatVersion}"
    contraintLayout = "androidx.constraintlayout:constraintlayout:${constarintLayoutVersion}"
    multiDex = "androidx.multidex:multidex:${multiDexVersion}"
    material = "com.google.android.material:material:${materialVersion}"
    supportFragment = "androidx.fragment:fragment:${supportFragmentVersion}"
    androidAnnotations = "androidx.annotation:annotation:${androidAnnotationsVersion}"
    supportV4 = "androidx.legacy:legacy-support-v4:${supportV4Version}"
    cardView = "androidx.cardview:cardview:${cardViewVersion}"
    firebaseStorage = "com.google.firebase:firebase-storage:${firebaseStorageVersion}"

    timber = "com.jakewharton.timber:timber:${timberVersion}"

    butter = "com.jakewharton:butterknife:${butterKnifeVersion}"

    roomRuntime = "android.arch.persistence.room:runtime:${roomVersion}"
    roomRxJava = "android.arch.persistence.room:rxjava2:${roomVersion}"

    dagger = "com.google.dagger:dagger:${daggerVersion}"
    daggerSupport = "com.google.dagger:dagger-android-support:${daggerVersion}"
    javaxAnnotation = "javax.annotation:jsr250-api:${javaxAnnotationVersion}"
    javaxInject = "javax.inject:javax.inject:${javaxInjectVersion}"

    rxJava = "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    rxAndroid = "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}"
    //rxKotlin = "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}"

    retrofit = "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    retrofitConverter = "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    retrofitAdapter = "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"

    okHttp = "com.squareup.okhttp3:okhttp:${okHttpVersion}"
    okHttpLogger = "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"

    gson = "com.google.code.gson:gson:${gsonVersion}"

    glide = "com.github.bumptech.glide:glide:${glideVersion}"
    glideOkHttp = "com.github.bumptech.glide:okhttp3-integration:${glideVersion}"
    glideCompiler = "com.github.bumptech.glide:compiler:${glideVersion}"

    threetenabp = "com.jakewharton.threetenabp:threetenabp:${threeTenAbpVersion}"

    stetho = "com.facebook.stetho:stetho:${stethoVersion}"
    stethoOkHttp = "com.facebook.stetho:stetho-okhttp3:${stethoVersion}"

    parceler = "org.parceler:parceler-api:${parcelerVersion}"
    parcelerProcessor = "org.parceler:parceler:${parcelerVersion}"

    circleImageView = "de.hdodenhof:circleimageview:${circleImageViewVersion}"
    segmentedButton = "com.github.ceryle:SegmentedButton:${segmentedButtonVersion}"

    zing ="com.google.zxing:core:${zingVersion}"

    firebaseCore = "com.google.firebase:firebase-core:${firebaseCoreVersion}"
    firebaseMessaging = "com.google.firebase:firebase-messaging:${firebaseMessagingVersion}"
    firebaseStorage = "com.google.firebase:firebase-storage:${firebaseStorageVersion}"
    firebaseCrashlytics = "com.google.firebase:firebase-crashlytics:${firebaseCrashlyticsVersion}"

    dateRangePicker = "com.squareup:android-times-square:1.6.5@aar"

    googleMap = "com.google.android.gms:play-services-maps:16.1.0"

    //comp
    roomCompiler = "android.arch.persistence.room:compiler:${roomVersion}"

    daggerCompiler = "com.google.dagger:dagger-compiler:${daggerVersion}"

    //proc
    daggerProcessor = "com.google.dagger:dagger-android-processor:${daggerVersion}"

    butterProcessor = "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    //test dependencies
    junit = "junit:junit:${jUnitVersion}"
    mockito = "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    assertj = "org.assertj:assertj-core:${assertJVersion}"
    //kotlinJUnit = "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}"
    robolectric = "org.robolectric:robolectric:${robolectricVersion}"
    roomTesting = "android.arch.persistence.room:testing:${roomVersion}"
    archTesting = "android.arch.core:core-testing:${roomVersion}"
    supportRunner = "com.android.support.test:runner:${androidSupportRunnerVersion}"
    supportRules = "com.android.support.test:rules:${androidSupportRulesVersion}"
    espressoCore = "androidx.test.espresso:espresso-core:${espressoVersion}"
    espressoIntents = "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
    espressoContrib = "com.android.support.test.espresso:espresso-contrib:${espressoVersion}"
    androidRunner = "androidx.test:runner:${runnerVersion}"
    androidRules = "com.android.support.test:rules:${runnerVersion}"
    mockitoAndroid = "org.mockito:mockito-android:${mockitoAndroidVersion}"


    MODULE_DOMAIN_IMPL_DEPS = [
            javaxAnnotation,
            javaxInject,
            rxJava,
            gson,
            threetenabp,
    ]

    MODULE_DOMAIN_TEST_DEPS = [
            junit,
            mockito,
            assertj
    ]

    MODULE_DATA_IMPL_DEPS = [
            rxJava,
            javaxAnnotation,
            javaxInject
    ]

    MODULE_DATA_TEST_DEPS = [
            junit,
//            kotlinJUnit,
            assertj,
            mockito
    ]

    MODULE_CACHE_IMPL_DEPS = [
            gson,
            rxJava,
            javaxAnnotation,
            javaxInject,
            roomRxJava,
            roomRuntime
    ]

    MODULE_CACHE_TEST_DEPS = [
            junit,
//            kotlinJUnit,
            assertj,
            mockito,
            robolectric
    ]


    MODULE_REMOTE_IMPL_DEPS = [
//            kotlin,
gson,
rxJava,
rxAndroid,
javaxAnnotation,
javaxInject,
okHttp,
okHttpLogger,
retrofit,
retrofitConverter,
retrofitAdapter,
threetenabp
    ]

    MODULE_REMOTE_TEST_DEPS = [
            junit,
//            kotlinJUnit,
            assertj,
            mockito
    ]

    MODULE_UI_IMPL_DEPS = [
            appcompat,
            contraintLayout,
            material,
            supportFragment,
            multiDex,
//            kotlin,
            rxJava,
//            rxKotlin,
            rxAndroid,
            javaxAnnotation,
            javaxInject,
            timber,
            dagger,
            daggerSupport,
            butter,
            gson,
            androidAnnotations,
            threetenabp,
            retrofit,
            stetho,
            stethoOkHttp,
            parceler,
            circleImageView,
            roomRuntime,
            firebaseCore,
            firebaseStorage,
            firebaseCrashlytics,
            firebaseMessaging,
            glide,
            glideOkHttp,
            okHttpLogger,
    ]


}